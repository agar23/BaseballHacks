{"version":3,"sources":["resources/redSox.png","attChart.js","payrollChart.js","popChart.js","crimeChart.js","stats.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","attChart","react_default","a","createElement","es6","width","this","props","height","margin","top","right","bottom","left","type","dataKey","name","cursor","strokeDasharray","data","ChartData","chartData","fill","Component","payrollChart","PopData","CrimeChart","Stats","ListGroup","className","ListGroupItem","min","max","pearson","App","Jumbotron","fluid","Container","src","logo","alt","umd","src_attChart","stats","AttChartData","optimalRangeMin","optimalRangeMax","pearsonCorr","src_payrollChart","PayChartData","popChart","PopChartData","crimeChart","CrimeChartData","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3f7cfccb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/redSox.e95a1d63.png\";","import React, { Component } from 'react';\nimport {\n  ScatterChart, Scatter, XAxis, YAxis, ZAxis, CartesianGrid, Tooltip\n} from 'recharts';\nimport ChartData from './resources/attendance.json';\n\nclass attChart extends Component {\n  render() {\n    return (\n        <ScatterChart\n            width={this.props.width}\n            height={this.props.height}\n            margin={{\n            top: 20, right: 20, bottom: 20, left: 20,\n            }}>\n            <CartesianGrid />\n            <XAxis type=\"number\" dataKey=\"x\" name=\"Att\"  />\n            <YAxis type=\"number\" dataKey=\"y\" name=\"Wins\" />\n            <ZAxis type=\"number\" dataKey=\"z\" name=\"Year\" />\n            <Tooltip cursor={{ strokeDasharray: '3 3' }} />\n        <Scatter name=\"A school\" data={ChartData.chartData} fill=\"#8884d8\" />\n      </ScatterChart>\n    );\n  }\n};\n\nexport default attChart;","import React, { Component } from 'react';\nimport {\n  ScatterChart, Scatter, XAxis, YAxis, ZAxis, CartesianGrid, Tooltip\n} from 'recharts';\nimport ChartData from './resources/payroll.json';\n\nclass payrollChart extends Component {\n  render() {\n    return (\n        <ScatterChart\n            width={this.props.width}\n            height={this.props.height}\n            margin={{\n            top: 20, right: 20, bottom: 20, left: 20,\n            }}>\n            <CartesianGrid />\n            <XAxis type=\"number\" dataKey=\"x\" name=\"Total Payroll\"  />\n            <YAxis type=\"number\" dataKey=\"y\" name=\"Wins\" />\n            <ZAxis type=\"number\" dataKey=\"z\" name=\"Year\" />\n            <Tooltip cursor={{ strokeDasharray: '3 3' }} />\n        <Scatter name=\"A school\" data={ChartData.chartData} fill=\"#8884d8\" />\n      </ScatterChart>\n    );\n  }\n};\n\nexport default payrollChart;","import React, { Component } from 'react';\nimport {\n  ScatterChart, Scatter, XAxis, YAxis, ZAxis, CartesianGrid, Tooltip\n} from 'recharts';\nimport PopData from './resources/population.json';\n\nclass attChart extends Component {\n  render() {\n    return (\n        <ScatterChart\n            width={this.props.width}\n            height={this.props.height}\n            margin={{\n            top: 20, right: 20, bottom: 20, left: 20,\n            }}>\n            <CartesianGrid />\n            <XAxis type=\"number\" dataKey=\"x\" name=\"Population\"  />\n            <YAxis type=\"number\" dataKey=\"y\" name=\"Wins\" />\n            <ZAxis type=\"number\" dataKey=\"z\" name=\"Year\" />\n            <Tooltip cursor={{ strokeDasharray: '3 3' }} />\n        <Scatter name=\"A school\" data={PopData.chartData} fill=\"#8884d8\" />\n      </ScatterChart>\n    );\n  }\n};\n\nexport default attChart;","import React, { Component } from 'react';\nimport {\n  ScatterChart, Scatter, XAxis, YAxis, ZAxis, CartesianGrid, Tooltip\n} from 'recharts';\nimport ChartData from './resources/crime.json';\n\nclass CrimeChart extends Component {\n  render() {\n    return (\n        <ScatterChart\n            width={this.props.width}\n            height={this.props.height}\n            margin={{\n            top: 20, right: 20, bottom: 20, left: 20,\n            }}>\n            <CartesianGrid />\n            <XAxis type=\"number\" dataKey=\"x\" name=\"Crime Rate Index in Massachusets\"  />\n            <YAxis type=\"number\" dataKey=\"y\" name=\"Wins\" />\n            <ZAxis type=\"number\" dataKey=\"z\" name=\"Year\" />\n            <Tooltip cursor={{ strokeDasharray: '3 3' }} />\n        <Scatter name=\"A school\" data={ChartData.chartData} fill=\"#8884d8\" />\n      </ScatterChart>\n    );\n  }\n};\n\nexport default CrimeChart;","import React, { Component } from 'react';\nimport { ListGroup, ListGroupItem } from 'reactstrap';\n\n\nclass Stats extends Component {\n  render() {\n    return (\n        <ListGroup className='list'>\n                  <ListGroupItem><b>Min Range:</b> {this.props.min}</ListGroupItem>\n                  <ListGroupItem><b>Max Range:</b> {this.props.max}</ListGroupItem>\n                  <ListGroupItem><b>Pearson Correlation: </b> {this.props.pearson}</ListGroupItem>\n        </ListGroup>\n    );\n  }\n};\n\nexport default Stats;","import React, { Component } from 'react';\nimport {\n  Accordion,\n  AccordionItem,\n  AccordionItemTitle,\n  AccordionItemBody,\n} from 'react-accessible-accordion';\nimport { Jumbotron, Container } from 'reactstrap';\n\nimport Chart1 from './attChart';\nimport Chart2 from './payrollChart';\nimport Chart3 from './popChart';\nimport Chart4 from './crimeChart';\nimport Stats from './stats';\n\nimport logo from './resources/redSox.png'\nimport AttChartData from './resources/attendance.json';\nimport PayChartData from './resources/payroll.json';\nimport CrimeChartData from './resources/crime.json';\nimport PopChartData from './resources/population.json';\n\nimport 'react-accessible-accordion/dist/fancy-example.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div>\n          <Jumbotron fluid className='jumbo'>\n            <Container fluid>\n              <div className='row'>\n                <div className='col-sm topBox'>\n                  <h1 className=\"display-4 mainHeading\">Hey, Boston Red Sox</h1>\n                  <p className=\"lead subHeading\">Do This To Win <span className='subMinHeading'>(it's backed by data science, by non-data-scientists)</span></p>\n                </div>\n                <div className='col-sm'>\n                  <img  src={logo} alt=\"fireSpot\" height=\"200\" width=\"200\"/>\n                </div>\n              </div>     \n            </Container>\n          </Jumbotron>\n      </div>\n    <Accordion>\n        <AccordionItem>\n            <AccordionItemTitle>\n                <h3>Get more people to come to your games</h3>\n                <div>Optimal <b className=\"category\">Attendance</b> range for target wins of <b>>95</b> per season: <b className=\"category-value\">1,556,402 - 3,062,699</b></div>\n            </AccordionItemTitle>\n            <AccordionItemBody>\n              <div className='row'>\n                <div>\n                  <Chart1\n                  width={800}\n                  height={500}/>\n                </div>\n                <div>\n                  <Stats \n                    min={AttChartData.optimalRangeMin}\n                    max={AttChartData.optimalRangeMax}\n                    pearson={AttChartData.pearsonCorr}/>\n                </div>\n              </div>\n            </AccordionItemBody>\n        </AccordionItem>\n        <AccordionItem>\n            <AccordionItemTitle>\n                <h3>Pay your players more</h3>\n                <div>Optimal <b className=\"category\">Team Payroll</b> range for target wins of <b>>95</b> per season: <b className=\"category-value\">$98,696,500 - $206,247,686</b></div>\n            </AccordionItemTitle>\n            <AccordionItemBody>\n            <div className='row'>\n                <div>\n                  <Chart2\n                  width={800}\n                  height={500}/>\n                </div>\n                <div>\n                <Stats \n                    min={PayChartData.optimalRangeMin}\n                    max={PayChartData.optimalRangeMax}\n                    pearson={PayChartData.pearsonCorr}/>\n                </div>\n              </div>\n            </AccordionItemBody>\n        </AccordionItem>\n        <AccordionItem>\n            <AccordionItemTitle>\n              <h3>Get people to have more babies in Massachusetts</h3>\n              <div>Optimal <b className=\"category\">Population</b> range in Massachusetts for target wins of <b>>95</b> per season: <b className=\"category-value\">5,774,000 - 6,708,874</b></div>\n            </AccordionItemTitle>\n            <AccordionItemBody>\n            <div className='row'>\n                <div>\n                  <Chart3\n                  width={800}\n                  height={500}/>\n                </div>\n                <div>\n                <Stats \n                    min={PopChartData.optimalRangeMin}\n                    max={PopChartData.optimalRangeMax}\n                    pearson={PopChartData.pearsonCorr}/>\n                </div>\n              </div>\n            </AccordionItemBody>\n        </AccordionItem>\n        <AccordionItem>\n            <AccordionItemTitle>\n                <h3>Don't do this one</h3>\n                <div>Optimal <b className=\"category\">Crime Index</b> range in Massachusetts for target wins of <b>>95</b> per season: <b className=\"category-value\">164,538 - 354,216</b></div>\n            </AccordionItemTitle>            \n            <AccordionItemBody>\n              <div className='row'>\n                <div>\n                  <Chart4\n                  width={800}\n                  height={500}/>\n                </div>\n                <div>\n                <Stats \n                  min={CrimeChartData.optimalRangeMin}\n                  max={CrimeChartData.optimalRangeMax}\n                  pearson={CrimeChartData.pearsonCorr}/>\n                </div>\n              </div>\n            </AccordionItemBody>\n        </AccordionItem>\n    </Accordion>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}